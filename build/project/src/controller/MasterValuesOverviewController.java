package controller;

import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Node;
import javafx.scene.Parent;
import javafx.scene.control.Button;

import javafx.scene.control.TextField;
import javafx.scene.control.cell.PropertyValueFactory;
import model.IbCustomer;
import model.IbMasterValue;
import util.InsureCompleteVO;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.EntityTransaction;
import javax.persistence.Persistence;
import javax.persistence.TypedQuery;

import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;

import javafx.scene.control.ComboBox;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;

public class MasterValuesOverviewController {
	@FXML
	private TableView tablePrincipal;
	@FXML
	private ComboBox cbTipoCodigo;
	@FXML
	private TextField tfDescripcion;
	@FXML
	private Button btnAlta;
	@FXML
	private Button btnCerrar;
	@FXML
	private TextField tfSiguienteCodigo;
	@FXML
	private TableColumn<IbMasterValue, String> codeColumn;

	public TableColumn getcodeColumn() {
		return codeColumn;
	}

	@FXML
	private TableColumn<IbMasterValue, String> descriptionColumn;

	public TableColumn getdescriptionColumn() {
		return descriptionColumn;
	}

	@FXML
	private TableColumn<IbMasterValue, String> typeColumn;

	public TableColumn gettypeColumn() {
		return typeColumn;
	}

	private InsureCompleteVO icVO = new InsureCompleteVO();
	// Event Listener on Button[#btnAlta].onAction
	@FXML
	public void handleAlta(ActionEvent event) {
		// TODO Autogenerated
		EntityManagerFactory emf;
		EntityManager em;
		emf = Persistence.createEntityManagerFactory("prodiSegur");
		em = emf.createEntityManager();
		EntityTransaction tx = em.getTransaction();
		IbMasterValue imv = new IbMasterValue();

		imv.setTipoCodigo(cbTipoCodigo.getSelectionModel().getSelectedItem().toString());
		imv.setDescripcion(tfDescripcion.getText().toUpperCase().trim());
		imv.setValor(tfSiguienteCodigo.getText());
		tx.begin();
		em.persist(imv);
		tx.commit();

		initData(cbTipoCodigo.getSelectionModel().getSelectedItem().toString(),this.icVO);
	}

	public void initData(String tipo, InsureCompleteVO icVO) {
		this.icVO = icVO;
		EntityManagerFactory emf;
		EntityManager em;
		emf = Persistence.createEntityManagerFactory("prodiSegur");
		em = emf.createEntityManager();
		EntityTransaction tx = em.getTransaction();
		TypedQuery<IbMasterValue> query = em.createNamedQuery("IbMasterValue.findAllByType", IbMasterValue.class);
		query.setParameter("type", tipo);
		List<IbMasterValue> listFormaPago = query.getResultList();
		List<String> listType = new ArrayList<String>();

		IbMasterValue mv = new IbMasterValue();
		mv.setTipoCodigo(tipo);
		listType.add(mv.getTipoCodigo());
		ObservableList<IbMasterValue> listaObservableFormaPago = FXCollections.observableArrayList(listFormaPago);
		ObservableList<String> listaObservableTipo = FXCollections.observableArrayList(listType);
		cbTipoCodigo.setItems(listaObservableTipo);
		cbTipoCodigo.setValue(tipo);
		typeColumn.setCellValueFactory(new PropertyValueFactory<IbMasterValue, String>("tipoCodigo"));
		codeColumn.setCellValueFactory(new PropertyValueFactory<IbMasterValue, String>("valor"));
		descriptionColumn.setCellValueFactory(new PropertyValueFactory<IbMasterValue, String>("descripcion"));

		tablePrincipal.getColumns().clear();
		tablePrincipal.setItems(listaObservableFormaPago);
		tablePrincipal.getColumns().addAll(typeColumn);
		tablePrincipal.getColumns().addAll(codeColumn);
		tablePrincipal.getColumns().addAll(descriptionColumn);

		TypedQuery<String> queryMax = em.createNamedQuery("IbMasterValue.findMaxValorByType", String.class);
		queryMax.setParameter("type", tipo);
		List<String> listMaxValor = queryMax.getResultList();
		String code = listMaxValor.get(0).toString();
		int enteroCode = Integer.parseInt(code.substring(code.length() - 2, code.length()));
		enteroCode += 1;
		String enteroCodeString = String.valueOf(enteroCode);
		if (enteroCodeString.length() == 1) {
			enteroCodeString = "0" + enteroCodeString;
		}
		String tipoCode = code.substring(0, code.length() - 2);
		tfSiguienteCodigo.setText(tipoCode + enteroCodeString);

	}

	// para sacar todos los tipos en el comboBox
	public void initData() {
		EntityManagerFactory emf;
		EntityManager em;
		emf = Persistence.createEntityManagerFactory("prodiSegur");
		em = emf.createEntityManager();
		EntityTransaction tx = em.getTransaction();
		TypedQuery<IbMasterValue> query = em.createNamedQuery("IbMasterValue.findAllTypes", IbMasterValue.class);
		List<IbMasterValue> listFormaPago = query.getResultList();
		ObservableList<IbMasterValue> listaObservableFormaPago = FXCollections.observableArrayList(listFormaPago);
		cbTipoCodigo.setItems(listaObservableFormaPago);

	}

	// Event Listener on Button[#btnAlta].onAction
	@FXML
	public void handleCerrar(ActionEvent event) {
		((Node)(event.getSource())).getScene().getWindow().hide();		
	}

}
